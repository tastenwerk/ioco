script(type='text/html', id='infoTemplate')
  .title
    span.close.pull-right(data-bind='click: closeProperties') &times;
    span( data-bind='text: name' )
    a.icn.icn-pencil.rename.tooltip( data-bind='click: renameItem, attr: {title: t("rename")}' )

  .side-tabs

    ul.side-tabs-nav
      li.tooltip-r(data-bind='attr: { title: t("document.info.general") }')
        span.icn.icn-preferences
      // ko if: typeof( versions ) !== 'undefined'
      li.tooltip-r(data-bind='attr: { title: t("document.info.history")}')
        span.icn.icn-history
      // /ko
      li.tooltip-r(data-bind='attr: { title: t("document.info.access")}')
        span.icn.icn-access
      li.tooltip-r(data-bind='attr: { title: t("document.info.comments")}')
        span.icn.icn-comments

    .side-tabs-content

      div
        p.item
          label.pull-left=t('createdAt')
          span(data-bind='text: formattedDate( createdAt )')
        p.item
          label.pull-left=t('document.info.owner')
          span(data-bind='text: getUser( _createdBy() ).name.nick')
        p.item
          label.pull-left=t('updatedAt')
          span(data-bind='text: formattedDate( updatedAt )')
        p.item
          label.pull-left=t('by')
          span(data-bind='text: getUser( _updatedBy() ).name.nick')

        p.item
        p.item

        p.item
          label=t('document.labels')
          br
          .ioco-labels

        p.item
        p.item

        p.item
          label=t('document.color')
          br
          span.color-sel-item.no-color( data-bind='click: selColor, css: { selected: !properties() || !properties().selectedColor }' )
          span.color-sel-item( style='background: #c64847', data-bind='click: selColor, css: { selected: properties() && properties().selectedColor && "#c64847" === properties().selectedColor }' )
          span.color-sel-item( style='background: #1f497c', data-bind='click: selColor, css: { selected: properties() && properties().selectedColor && "#1f497c" === properties().selectedColor }' )
          span.color-sel-item( style='background: #4f81bd', data-bind='click: selColor, css: { selected: properties() && properties().selectedColor && "#4f81bd" === properties().selectedColor }' )
          span.color-sel-item( style='background: #9bbb59', data-bind='click: selColor, css: { selected: properties() && properties().selectedColor && "#9bbb59" === properties().selectedColor }' )
          span.color-sel-item( style='background: #8064a2', data-bind='click: selColor, css: { selected: properties() && properties().selectedColor && "#8064a2" === properties().selectedColor }' )
          span.color-sel-item( style='background: #4bacc6', data-bind='click: selColor, css: { selected: properties() && properties().selectedColor && "#4bacc6" === properties().selectedColor }' )
          span.color-sel-item( style='background: #f79646', data-bind='click: selColor, css: { selected: properties() && properties().selectedColor && "#f79646" === properties().selectedColor }' )
          span.color-sel-item( style='background: #8e736a', data-bind='click: selColor, css: { selected: properties() && properties().selectedColor && "#8e736a" === properties().selectedColor }' )


      // ko if: typeof( versions ) !== 'undefined'
      div
        ul.versions-list(data-bind='template: { name: "versionListTemplate", foreach: versions  }')
      // /ko

      div        
        p.item
          label.pull-left=t('document.public_status')
          span.tooltip.lbl.public-status(data-bind='attr: { title: t("document.click_to_change_public_status") }, click: changePublicStatus, css: {locked: !published()}, text: (published() ? t("document.published") : t("document.locked"))')

        ul.access-list(data-bind='template: {name: "accessListTemplate", foreach: access }')
        
      div
        h1=t('document.info.comments')

        div(data-bind='template: { name: "commentFormTemplate", data: createComment() }')
        ul.comments-list(data-bind='template: { name: "commentsListTemplate", foreach: comments  }')